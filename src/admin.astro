---
import { readFileSync } from 'fs';
import path from 'path';
import template from "virtual:astro-decap-cms/template";

// Assuming you have the relative path in `templatePath`
// You might need to adjust the path based on your project structure
const templatePath = `../${template}`;
let scriptContent = '';

try {
  const resolvedPath = path.resolve(templatePath);
  scriptContent = readFileSync(resolvedPath, 'utf-8');
} catch (error) {
  console.error('Error reading decap.js:', error.message);
  // Handle the error or set a fallback
}
console.log(scriptContent)
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="robots" content="noindex" />
		<link href="/admin/config.yml" type="text/yaml" rel="cms-config-url" />
		<title>Content Manager</title>
	</head>
	<body>
		<script src="https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js"
		></script>
		<script>
			import styles from "virtual:astro-decap-cms/styles";
			styles.forEach((style) => {
				const script = document.createElement("script");
				script.textContent = `CMS.registerPreviewStyle('${style}');`;
				document.body.appendChild(script);
			});
		</script>
		<!-- {console.log("template in body",template)} -->
		<!-- <script src={template}></script>
		
		-->

		<!-- <script >
			import template from "virtual:astro-decap-cms/template";
			if (template) {
			  fetch(template)
				.then(response => response.text())
				.then(scriptText => {
				  const script = document.createElement('script');
				  script.textContent = scriptText;
				  document.body.appendChild(script);
				})
				.catch(error => {
				  console.error('Error loading script:', error);
				});
			}
		  </script> -->
		<!-- <script>
			import template from "virtual:astro-decap-cms/template";
			if (template) {
				const script = document.createElement("script");
				script.src = template;
				document.body.appendChild(script);
			}
		</script> -->
	</body>
</html>
